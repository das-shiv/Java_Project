String:
public class Name {
    public static void main(String[] args) {
        String name = "shiv";
        System.out.println("Hello " + name);
    }
}

- In Java String is not a primitive data type like int, double, float, char. String is a Class.

- String are immutable, i.e. once created we can not modify it.

- We can store strings in by creating a variable (name) of the String class.

- We can also write it like,

        String name = new String(); // This initialize a String reference variable name, it points to stack pool in heap area where an empty string ("") is stored.
        System.out.println(name);   // This will print the empty string in name variable. i.e. it will print a new line.

        String name = new String("shiv"); // Passing the value to the name variable

        System.out.println(name);       // It will print the value of name variable i.e. shiv

        Example 2: String are immutable
        String name = "shiv" // the value shiv is stored in string pool in heap area, the reference variable points to this address in string pool.
        String name = "raju" // "This stores the value raju in the String pool, and the reference variable now points to
                                raju. The "shiv" object is still present in the String pool and will typically remain there
                                 for the lifetime of the application. It is not removed via regular garbage collection,
                                  and can only be removed if the class loader associated with the string is unloaded
                                  (e.g., in a custom class loading scenario)."


        String user = "raju" // no new string raju will be created in string pool because raju already exists.
                        the variable user will also point to the location of raju in string pool.

- The String class also comes with some methods we can use like:

System.out.println(name.length()); // Output: 4

System.out.println(name.charAt(0)); // Output: s

System.out.println(name.toUpperCase()); // Output: SHIV

System.out.println(name.toUpperCase()); // Output: SHIV

System.out.println(name.substring(0, 2)); // Output: sh

String name3 = "Shiv";
System.out.println(name.equals(name3));            // Output: false
System.out.println(name.equalsIgnoreCase(name3));  // Output: true


System.out.println(name.contains("hi")); // Output: true


System.out.println(name.replace("i", "e")); // Output: shev


String name4 = "  shiv  ";
System.out.println(name4.trim()); // Output: shiv

String sentence = "shiv is coding";
String[] words = sentence.split(" ");
System.out.println(words[1]); // Output: is
